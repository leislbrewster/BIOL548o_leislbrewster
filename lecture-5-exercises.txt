1. variable we need = origin, dest, tailnum ,
Tables we have to combine = weather, airports, planes

2. Weather connects to airports via origin - the faa and the origin are the same 

3. dest

4.Can represent it as a dataframe with the variables: year, month, day, tailnum, flight density. This dataset would connect to the weather dataset via year, month and day and the dataset planes via tailnum


Section 4.6
1)R script:

flights_delay<- flights %>%
  group_by(dest) %>%
  summarise(average_delay = mean (arr_delay,na.rm = TRUE))

flight_delays_airports<-airports %>% 
  right_join(flights_delay, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
  borders("state") +
  geom_point(aes(color = average_delay)) +
  scale_colour_gradient(low = "steelblue", high = "yellow")+
  coord_quickmap()

2)

R script:
flights2 <- flights %>% 
  select(year:day, hour, origin, dest, tailnum, carrier)


flights3<-airports %>% 
  select(faa, lat, lon ) %>%
  left_join(flights2, c("faa" = "dest"))


flights3<-flights3 %>%
  rename(c(dest = faa, dest_lat = lat, dest_lon = lon))%>%
  na.omit()


flights4<-airports %>% 
  select(faa, lat, lon ) %>%
  left_join(flights3, c("faa" = "origin"))

flights4<-flights4 %>%
  rename(c(origin = faa, or_lat = lat, or_lon = lon))%>%
  na.omit()
  
  
3)There is no relationship between the age of the plane and its delays (p-value: < 2.2e-16).
R script:

flight_age<-flights %>%
  left_join(planes, by = "tailnum")%>%
  rename(plane_year = year.y)



mod1<-lm(arr_delay~plane_year, data = flight_age)
summary(mod1)

flight_age %>%
  ggplot(aes(plane_year, arr_delay))+
  geom_point(aes(colour = "red"))+
  geom_abline(intercept = -241.14561, slope = 0.12400)+
  labs(x = "Plane Year", y = "Arival Delay")

visreg(mod1)

section 5.1

2)
flights_100<- flights %>%
  filter(flight > 100)
  
5)
flight_anti_join1<-anti_join(flights, airports, by = c("dest" = "faa"))

This line of code prints all of the observations in "flights" for which there are no faa codes in "airports" for a given destination. For example, there are 5819 flights that landed at SJU, howvever, there are no faa codes for this destination listed in the "airports" dataframe so there is no way to determine the name or location of the SJU destination, given the data.



flight_anti_join2<-anti_join(airports, flights, by = c("faa" = "dest"))

This line of code prints all of the obsevrations in "airports" where a given faa code does not have a match to any of the destinations in "flights". For example, by joining these 2 datasets one can see that none of the planes in "flights" landed at 04G	or Lansdowne Airport, as this faa code is not found under the dest column in "flights".